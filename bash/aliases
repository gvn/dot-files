# ------------------------------------
# Directory Bookmarks
# ------------------------------------

alias gocode='cd ~/Dropbox/Code/'
alias godots='cd ~/bin/dotfiles'

# ------------------------------------
# General
# ------------------------------------

alias ..='cd ..'
alias l='ls -Alhp'
alias reload='source ~/.bashrc'
alias tu='top -o cpu'
alias of='open .'

function take {
    mkdir $1
    cd $1
}

# ------------------------------------
# Git
# ------------------------------------

alias g='git status'
alias ga='git add'
alias gc='git commit'
alias gd='git diff'
alias gb='git branch'
alias go='git checkout'

function gint {
    git init
    echo '.DS_Store' > .gitignore
}

# ------------------------------------
# Web
# ------------------------------------

# Create a new static website scaffold
function webstarter() {
    local projectName="${1:-website}"

    # Only pull the latest revision with no history
    git clone --depth=1 https://github.com/gvn/build-template.git $projectName

    cd $projectName

    # Remove old bindings since this is a new project
    rm -rf .git

    echo '.DS_Store' > .gitignore
    echo $projectName > README.md
    git init
}

# Create a JavaScript component scaffold
function jsc() {
    echo -n "Component Name: "
    read componentName
    componentName=${componentName:-Component}

    echo -n "Namespace (window): "
    read namespace
    namespace=${namespace:-window}

    echo -n "Author: "
    read author

    # strip spaces from class name
    local componentNameNoSpace="$(echo $componentName | tr -d ' ')"

    # convert filename to all lowercase and prepend namespace if specified
    if [ "$namespace" != "window" ]; then
        local filename="$(echo $namespace.$componentNameNoSpace.js | tr '[:upper:]' '[:lower:]')"
    else
        local filename="$(echo $componentNameNoSpace.js | tr '[:upper:]' '[:lower:]')"
    fi

    curl https://raw.github.com/gvn/component-pattern/master/component.js > $filename

    # convert tokens within scaffold to specified values
    sed -i .bak "s/Component/$componentNameNoSpace/g" $filename
    sed -i .bak "s/window/$namespace/g" $filename
    sed -i .bak "s/#AUTHOR#/$author/g" $filename

    rm $filename.bak
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
    local port="${1:-8000}"
    open "http://localhost:${port}/" && python -m SimpleHTTPServer "$port"
}

# Start a PHP server from a directory, optionally specifying the port
# (Requires PHP 5.4.0+.)
function phpserver() {
    local port="${1:-4000}"
    local ip=$(ipconfig getifaddr en1)
    sleep 1 && open "http://${ip}:${port}/" &
    php -S "${ip}:${port}"
}